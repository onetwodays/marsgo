//
// Copyright 2020 Signal Messenger, LLC
// SPDX-License-Identifier: AGPL-3.0-only

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.1
// source: Groups.proto

package textsecure

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Member_Role int32

const (
	Member_UNKNOWN       Member_Role = 0
	Member_DEFAULT       Member_Role = 1
	Member_ADMINISTRATOR Member_Role = 2
)

// Enum value maps for Member_Role.
var (
	Member_Role_name = map[int32]string{
		0: "UNKNOWN",
		1: "DEFAULT",
		2: "ADMINISTRATOR",
	}
	Member_Role_value = map[string]int32{
		"UNKNOWN":       0,
		"DEFAULT":       1,
		"ADMINISTRATOR": 2,
	}
)

func (x Member_Role) Enum() *Member_Role {
	p := new(Member_Role)
	*p = x
	return p
}

func (x Member_Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Member_Role) Descriptor() protoreflect.EnumDescriptor {
	return file_Groups_proto_enumTypes[0].Descriptor()
}

func (Member_Role) Type() protoreflect.EnumType {
	return &file_Groups_proto_enumTypes[0]
}

func (x Member_Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Member_Role.Descriptor instead.
func (Member_Role) EnumDescriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{1, 0}
}

type AccessControl_AccessRequired int32

const (
	AccessControl_UNKNOWN       AccessControl_AccessRequired = 0
	AccessControl_ANY           AccessControl_AccessRequired = 1
	AccessControl_MEMBER        AccessControl_AccessRequired = 2
	AccessControl_ADMINISTRATOR AccessControl_AccessRequired = 3
	AccessControl_UNSATISFIABLE AccessControl_AccessRequired = 4
)

// Enum value maps for AccessControl_AccessRequired.
var (
	AccessControl_AccessRequired_name = map[int32]string{
		0: "UNKNOWN",
		1: "ANY",
		2: "MEMBER",
		3: "ADMINISTRATOR",
		4: "UNSATISFIABLE",
	}
	AccessControl_AccessRequired_value = map[string]int32{
		"UNKNOWN":       0,
		"ANY":           1,
		"MEMBER":        2,
		"ADMINISTRATOR": 3,
		"UNSATISFIABLE": 4,
	}
)

func (x AccessControl_AccessRequired) Enum() *AccessControl_AccessRequired {
	p := new(AccessControl_AccessRequired)
	*p = x
	return p
}

func (x AccessControl_AccessRequired) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccessControl_AccessRequired) Descriptor() protoreflect.EnumDescriptor {
	return file_Groups_proto_enumTypes[1].Descriptor()
}

func (AccessControl_AccessRequired) Type() protoreflect.EnumType {
	return &file_Groups_proto_enumTypes[1]
}

func (x AccessControl_AccessRequired) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccessControl_AccessRequired.Descriptor instead.
func (AccessControl_AccessRequired) EnumDescriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{4, 0}
}

type AvatarUploadAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Credential string `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
	Acl        string `protobuf:"bytes,3,opt,name=acl,proto3" json:"acl,omitempty"`
	Algorithm  string `protobuf:"bytes,4,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	Date       string `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	Policy     string `protobuf:"bytes,6,opt,name=policy,proto3" json:"policy,omitempty"`
	Signature  string `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *AvatarUploadAttributes) Reset() {
	*x = AvatarUploadAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarUploadAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarUploadAttributes) ProtoMessage() {}

func (x *AvatarUploadAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarUploadAttributes.ProtoReflect.Descriptor instead.
func (*AvatarUploadAttributes) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{0}
}

func (x *AvatarUploadAttributes) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AvatarUploadAttributes) GetCredential() string {
	if x != nil {
		return x.Credential
	}
	return ""
}

func (x *AvatarUploadAttributes) GetAcl() string {
	if x != nil {
		return x.Acl
	}
	return ""
}

func (x *AvatarUploadAttributes) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *AvatarUploadAttributes) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *AvatarUploadAttributes) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

func (x *AvatarUploadAttributes) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          []byte      `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Role            Member_Role `protobuf:"varint,2,opt,name=role,proto3,enum=textsecure.Member_Role" json:"role,omitempty"`
	ProfileKey      []byte      `protobuf:"bytes,3,opt,name=profileKey,proto3" json:"profileKey,omitempty"`
	Presentation    []byte      `protobuf:"bytes,4,opt,name=presentation,proto3" json:"presentation,omitempty"`
	JoinedAtVersion uint32      `protobuf:"varint,5,opt,name=joinedAtVersion,proto3" json:"joinedAtVersion,omitempty"`
}

func (x *Member) Reset() {
	*x = Member{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member.ProtoReflect.Descriptor instead.
func (*Member) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{1}
}

func (x *Member) GetUserId() []byte {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *Member) GetRole() Member_Role {
	if x != nil {
		return x.Role
	}
	return Member_UNKNOWN
}

func (x *Member) GetProfileKey() []byte {
	if x != nil {
		return x.ProfileKey
	}
	return nil
}

func (x *Member) GetPresentation() []byte {
	if x != nil {
		return x.Presentation
	}
	return nil
}

func (x *Member) GetJoinedAtVersion() uint32 {
	if x != nil {
		return x.JoinedAtVersion
	}
	return 0
}

type MemberPendingProfileKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member        *Member `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	AddedByUserId []byte  `protobuf:"bytes,2,opt,name=addedByUserId,proto3" json:"addedByUserId,omitempty"`
	Timestamp     uint64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *MemberPendingProfileKey) Reset() {
	*x = MemberPendingProfileKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberPendingProfileKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberPendingProfileKey) ProtoMessage() {}

func (x *MemberPendingProfileKey) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberPendingProfileKey.ProtoReflect.Descriptor instead.
func (*MemberPendingProfileKey) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{2}
}

func (x *MemberPendingProfileKey) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *MemberPendingProfileKey) GetAddedByUserId() []byte {
	if x != nil {
		return x.AddedByUserId
	}
	return nil
}

func (x *MemberPendingProfileKey) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type MemberPendingAdminApproval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       []byte `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ProfileKey   []byte `protobuf:"bytes,2,opt,name=profileKey,proto3" json:"profileKey,omitempty"`
	Presentation []byte `protobuf:"bytes,3,opt,name=presentation,proto3" json:"presentation,omitempty"`
	Timestamp    uint64 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *MemberPendingAdminApproval) Reset() {
	*x = MemberPendingAdminApproval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberPendingAdminApproval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberPendingAdminApproval) ProtoMessage() {}

func (x *MemberPendingAdminApproval) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberPendingAdminApproval.ProtoReflect.Descriptor instead.
func (*MemberPendingAdminApproval) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{3}
}

func (x *MemberPendingAdminApproval) GetUserId() []byte {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *MemberPendingAdminApproval) GetProfileKey() []byte {
	if x != nil {
		return x.ProfileKey
	}
	return nil
}

func (x *MemberPendingAdminApproval) GetPresentation() []byte {
	if x != nil {
		return x.Presentation
	}
	return nil
}

func (x *MemberPendingAdminApproval) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type AccessControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes        AccessControl_AccessRequired `protobuf:"varint,1,opt,name=attributes,proto3,enum=textsecure.AccessControl_AccessRequired" json:"attributes,omitempty"`
	Members           AccessControl_AccessRequired `protobuf:"varint,2,opt,name=members,proto3,enum=textsecure.AccessControl_AccessRequired" json:"members,omitempty"`
	AddFromInviteLink AccessControl_AccessRequired `protobuf:"varint,3,opt,name=addFromInviteLink,proto3,enum=textsecure.AccessControl_AccessRequired" json:"addFromInviteLink,omitempty"`
}

func (x *AccessControl) Reset() {
	*x = AccessControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessControl) ProtoMessage() {}

func (x *AccessControl) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessControl.ProtoReflect.Descriptor instead.
func (*AccessControl) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{4}
}

func (x *AccessControl) GetAttributes() AccessControl_AccessRequired {
	if x != nil {
		return x.Attributes
	}
	return AccessControl_UNKNOWN
}

func (x *AccessControl) GetMembers() AccessControl_AccessRequired {
	if x != nil {
		return x.Members
	}
	return AccessControl_UNKNOWN
}

func (x *AccessControl) GetAddFromInviteLink() AccessControl_AccessRequired {
	if x != nil {
		return x.AddFromInviteLink
	}
	return AccessControl_UNKNOWN
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey                   []byte                        `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Title                       []byte                        `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description                 []byte                        `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
	Avatar                      string                        `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	DisappearingMessagesTimer   []byte                        `protobuf:"bytes,4,opt,name=disappearingMessagesTimer,proto3" json:"disappearingMessagesTimer,omitempty"`
	AccessControl               *AccessControl                `protobuf:"bytes,5,opt,name=accessControl,proto3" json:"accessControl,omitempty"`
	Version                     uint32                        `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	Members                     []*Member                     `protobuf:"bytes,7,rep,name=members,proto3" json:"members,omitempty"`
	MembersPendingProfileKey    []*MemberPendingProfileKey    `protobuf:"bytes,8,rep,name=membersPendingProfileKey,proto3" json:"membersPendingProfileKey,omitempty"`
	MembersPendingAdminApproval []*MemberPendingAdminApproval `protobuf:"bytes,9,rep,name=membersPendingAdminApproval,proto3" json:"membersPendingAdminApproval,omitempty"`
	InviteLinkPassword          []byte                        `protobuf:"bytes,10,opt,name=inviteLinkPassword,proto3" json:"inviteLinkPassword,omitempty"`
	AnnouncementsOnly           bool                          `protobuf:"varint,12,opt,name=announcements_only,json=announcementsOnly,proto3" json:"announcements_only,omitempty"` // next: 13
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{5}
}

func (x *Group) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *Group) GetTitle() []byte {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *Group) GetDescription() []byte {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Group) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Group) GetDisappearingMessagesTimer() []byte {
	if x != nil {
		return x.DisappearingMessagesTimer
	}
	return nil
}

func (x *Group) GetAccessControl() *AccessControl {
	if x != nil {
		return x.AccessControl
	}
	return nil
}

func (x *Group) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Group) GetMembers() []*Member {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Group) GetMembersPendingProfileKey() []*MemberPendingProfileKey {
	if x != nil {
		return x.MembersPendingProfileKey
	}
	return nil
}

func (x *Group) GetMembersPendingAdminApproval() []*MemberPendingAdminApproval {
	if x != nil {
		return x.MembersPendingAdminApproval
	}
	return nil
}

func (x *Group) GetInviteLinkPassword() []byte {
	if x != nil {
		return x.InviteLinkPassword
	}
	return nil
}

func (x *Group) GetAnnouncementsOnly() bool {
	if x != nil {
		return x.AnnouncementsOnly
	}
	return false
}

type GroupJoinInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey            []byte                       `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Title                []byte                       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description          []byte                       `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	Avatar               string                       `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	MemberCount          uint32                       `protobuf:"varint,4,opt,name=memberCount,proto3" json:"memberCount,omitempty"`
	AddFromInviteLink    AccessControl_AccessRequired `protobuf:"varint,5,opt,name=addFromInviteLink,proto3,enum=textsecure.AccessControl_AccessRequired" json:"addFromInviteLink,omitempty"`
	Version              uint32                       `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	PendingAdminApproval bool                         `protobuf:"varint,7,opt,name=pendingAdminApproval,proto3" json:"pendingAdminApproval,omitempty"` // next: 9
}

func (x *GroupJoinInfo) Reset() {
	*x = GroupJoinInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupJoinInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupJoinInfo) ProtoMessage() {}

func (x *GroupJoinInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupJoinInfo.ProtoReflect.Descriptor instead.
func (*GroupJoinInfo) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{6}
}

func (x *GroupJoinInfo) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *GroupJoinInfo) GetTitle() []byte {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *GroupJoinInfo) GetDescription() []byte {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *GroupJoinInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GroupJoinInfo) GetMemberCount() uint32 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *GroupJoinInfo) GetAddFromInviteLink() AccessControl_AccessRequired {
	if x != nil {
		return x.AddFromInviteLink
	}
	return AccessControl_UNKNOWN
}

func (x *GroupJoinInfo) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GroupJoinInfo) GetPendingAdminApproval() bool {
	if x != nil {
		return x.PendingAdminApproval
	}
	return false
}

type GroupChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions         []byte `protobuf:"bytes,1,opt,name=actions,proto3" json:"actions,omitempty"`
	ServerSignature []byte `protobuf:"bytes,2,opt,name=serverSignature,proto3" json:"serverSignature,omitempty"`
	ChangeEpoch     uint32 `protobuf:"varint,3,opt,name=changeEpoch,proto3" json:"changeEpoch,omitempty"`
}

func (x *GroupChange) Reset() {
	*x = GroupChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChange) ProtoMessage() {}

func (x *GroupChange) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChange.ProtoReflect.Descriptor instead.
func (*GroupChange) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{7}
}

func (x *GroupChange) GetActions() []byte {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *GroupChange) GetServerSignature() []byte {
	if x != nil {
		return x.ServerSignature
	}
	return nil
}

func (x *GroupChange) GetChangeEpoch() uint32 {
	if x != nil {
		return x.ChangeEpoch
	}
	return 0
}

type GroupChanges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupChanges []*GroupChanges_GroupChangeState `protobuf:"bytes,1,rep,name=groupChanges,proto3" json:"groupChanges,omitempty"`
}

func (x *GroupChanges) Reset() {
	*x = GroupChanges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChanges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChanges) ProtoMessage() {}

func (x *GroupChanges) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChanges.ProtoReflect.Descriptor instead.
func (*GroupChanges) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{8}
}

func (x *GroupChanges) GetGroupChanges() []*GroupChanges_GroupChangeState {
	if x != nil {
		return x.GroupChanges
	}
	return nil
}

type ExternalGroupCredential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ExternalGroupCredential) Reset() {
	*x = ExternalGroupCredential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalGroupCredential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalGroupCredential) ProtoMessage() {}

func (x *ExternalGroupCredential) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalGroupCredential.ProtoReflect.Descriptor instead.
func (*ExternalGroupCredential) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{9}
}

func (x *ExternalGroupCredential) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GroupChange_Actions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceUuid                         []byte                                                          `protobuf:"bytes,1,opt,name=sourceUuid,proto3" json:"sourceUuid,omitempty"`
	Version                            uint32                                                          `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	AddMembers                         []*GroupChange_Actions_AddMemberAction                          `protobuf:"bytes,3,rep,name=addMembers,proto3" json:"addMembers,omitempty"`
	DeleteMembers                      []*GroupChange_Actions_DeleteMemberAction                       `protobuf:"bytes,4,rep,name=deleteMembers,proto3" json:"deleteMembers,omitempty"`
	ModifyMemberRoles                  []*GroupChange_Actions_ModifyMemberRoleAction                   `protobuf:"bytes,5,rep,name=modifyMemberRoles,proto3" json:"modifyMemberRoles,omitempty"`
	ModifyMemberProfileKeys            []*GroupChange_Actions_ModifyMemberProfileKeyAction             `protobuf:"bytes,6,rep,name=modifyMemberProfileKeys,proto3" json:"modifyMemberProfileKeys,omitempty"`
	AddMembersPendingProfileKey        []*GroupChange_Actions_AddMemberPendingProfileKeyAction         `protobuf:"bytes,7,rep,name=addMembersPendingProfileKey,proto3" json:"addMembersPendingProfileKey,omitempty"`
	DeleteMembersPendingProfileKey     []*GroupChange_Actions_DeleteMemberPendingProfileKeyAction      `protobuf:"bytes,8,rep,name=deleteMembersPendingProfileKey,proto3" json:"deleteMembersPendingProfileKey,omitempty"`
	PromoteMembersPendingProfileKey    []*GroupChange_Actions_PromoteMemberPendingProfileKeyAction     `protobuf:"bytes,9,rep,name=promoteMembersPendingProfileKey,proto3" json:"promoteMembersPendingProfileKey,omitempty"`
	ModifyTitle                        *GroupChange_Actions_ModifyTitleAction                          `protobuf:"bytes,10,opt,name=modifyTitle,proto3" json:"modifyTitle,omitempty"`
	ModifyAvatar                       *GroupChange_Actions_ModifyAvatarAction                         `protobuf:"bytes,11,opt,name=modifyAvatar,proto3" json:"modifyAvatar,omitempty"`
	ModifyDisappearingMessageTimer     *GroupChange_Actions_ModifyDisappearingMessageTimerAction       `protobuf:"bytes,12,opt,name=modifyDisappearingMessageTimer,proto3" json:"modifyDisappearingMessageTimer,omitempty"`
	ModifyAttributesAccess             *GroupChange_Actions_ModifyAttributesAccessControlAction        `protobuf:"bytes,13,opt,name=modifyAttributesAccess,proto3" json:"modifyAttributesAccess,omitempty"`
	ModifyMemberAccess                 *GroupChange_Actions_ModifyMembersAccessControlAction           `protobuf:"bytes,14,opt,name=modifyMemberAccess,proto3" json:"modifyMemberAccess,omitempty"`
	ModifyAddFromInviteLinkAccess      *GroupChange_Actions_ModifyAddFromInviteLinkAccessControlAction `protobuf:"bytes,15,opt,name=modifyAddFromInviteLinkAccess,proto3" json:"modifyAddFromInviteLinkAccess,omitempty"`                      // change epoch = 1
	AddMembersPendingAdminApproval     []*GroupChange_Actions_AddMemberPendingAdminApprovalAction      `protobuf:"bytes,16,rep,name=addMembersPendingAdminApproval,proto3" json:"addMembersPendingAdminApproval,omitempty"`                    // change epoch = 1
	DeleteMembersPendingAdminApproval  []*GroupChange_Actions_DeleteMemberPendingAdminApprovalAction   `protobuf:"bytes,17,rep,name=deleteMembersPendingAdminApproval,proto3" json:"deleteMembersPendingAdminApproval,omitempty"`              // change epoch = 1
	PromoteMembersPendingAdminApproval []*GroupChange_Actions_PromoteMemberPendingAdminApprovalAction  `protobuf:"bytes,18,rep,name=promoteMembersPendingAdminApproval,proto3" json:"promoteMembersPendingAdminApproval,omitempty"`            // change epoch = 1
	ModifyInviteLinkPassword           *GroupChange_Actions_ModifyInviteLinkPasswordAction             `protobuf:"bytes,19,opt,name=modifyInviteLinkPassword,proto3" json:"modifyInviteLinkPassword,omitempty"`                                // change epoch = 1
	ModifyDescription                  *GroupChange_Actions_ModifyDescriptionAction                    `protobuf:"bytes,20,opt,name=modifyDescription,proto3" json:"modifyDescription,omitempty"`                                              // change epoch = 2
	ModifyAnnouncementsOnly            *GroupChange_Actions_ModifyAnnouncementsOnlyAction              `protobuf:"bytes,21,opt,name=modify_announcements_only,json=modifyAnnouncementsOnly,proto3" json:"modify_announcements_only,omitempty"` // change epoch = 3
}

func (x *GroupChange_Actions) Reset() {
	*x = GroupChange_Actions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChange_Actions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChange_Actions) ProtoMessage() {}

func (x *GroupChange_Actions) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChange_Actions.ProtoReflect.Descriptor instead.
func (*GroupChange_Actions) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{7, 0}
}

func (x *GroupChange_Actions) GetSourceUuid() []byte {
	if x != nil {
		return x.SourceUuid
	}
	return nil
}

func (x *GroupChange_Actions) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GroupChange_Actions) GetAddMembers() []*GroupChange_Actions_AddMemberAction {
	if x != nil {
		return x.AddMembers
	}
	return nil
}

func (x *GroupChange_Actions) GetDeleteMembers() []*GroupChange_Actions_DeleteMemberAction {
	if x != nil {
		return x.DeleteMembers
	}
	return nil
}

func (x *GroupChange_Actions) GetModifyMemberRoles() []*GroupChange_Actions_ModifyMemberRoleAction {
	if x != nil {
		return x.ModifyMemberRoles
	}
	return nil
}

func (x *GroupChange_Actions) GetModifyMemberProfileKeys() []*GroupChange_Actions_ModifyMemberProfileKeyAction {
	if x != nil {
		return x.ModifyMemberProfileKeys
	}
	return nil
}

func (x *GroupChange_Actions) GetAddMembersPendingProfileKey() []*GroupChange_Actions_AddMemberPendingProfileKeyAction {
	if x != nil {
		return x.AddMembersPendingProfileKey
	}
	return nil
}

func (x *GroupChange_Actions) GetDeleteMembersPendingProfileKey() []*GroupChange_Actions_DeleteMemberPendingProfileKeyAction {
	if x != nil {
		return x.DeleteMembersPendingProfileKey
	}
	return nil
}

func (x *GroupChange_Actions) GetPromoteMembersPendingProfileKey() []*GroupChange_Actions_PromoteMemberPendingProfileKeyAction {
	if x != nil {
		return x.PromoteMembersPendingProfileKey
	}
	return nil
}

func (x *GroupChange_Actions) GetModifyTitle() *GroupChange_Actions_ModifyTitleAction {
	if x != nil {
		return x.ModifyTitle
	}
	return nil
}

func (x *GroupChange_Actions) GetModifyAvatar() *GroupChange_Actions_ModifyAvatarAction {
	if x != nil {
		return x.ModifyAvatar
	}
	return nil
}

func (x *GroupChange_Actions) GetModifyDisappearingMessageTimer() *GroupChange_Actions_ModifyDisappearingMessageTimerAction {
	if x != nil {
		return x.ModifyDisappearingMessageTimer
	}
	return nil
}

func (x *GroupChange_Actions) GetModifyAttributesAccess() *GroupChange_Actions_ModifyAttributesAccessControlAction {
	if x != nil {
		return x.ModifyAttributesAccess
	}
	return nil
}

func (x *GroupChange_Actions) GetModifyMemberAccess() *GroupChange_Actions_ModifyMembersAccessControlAction {
	if x != nil {
		return x.ModifyMemberAccess
	}
	return nil
}

func (x *GroupChange_Actions) GetModifyAddFromInviteLinkAccess() *GroupChange_Actions_ModifyAddFromInviteLinkAccessControlAction {
	if x != nil {
		return x.ModifyAddFromInviteLinkAccess
	}
	return nil
}

func (x *GroupChange_Actions) GetAddMembersPendingAdminApproval() []*GroupChange_Actions_AddMemberPendingAdminApprovalAction {
	if x != nil {
		return x.AddMembersPendingAdminApproval
	}
	return nil
}

func (x *GroupChange_Actions) GetDeleteMembersPendingAdminApproval() []*GroupChange_Actions_DeleteMemberPendingAdminApprovalAction {
	if x != nil {
		return x.DeleteMembersPendingAdminApproval
	}
	return nil
}

func (x *GroupChange_Actions) GetPromoteMembersPendingAdminApproval() []*GroupChange_Actions_PromoteMemberPendingAdminApprovalAction {
	if x != nil {
		return x.PromoteMembersPendingAdminApproval
	}
	return nil
}

func (x *GroupChange_Actions) GetModifyInviteLinkPassword() *GroupChange_Actions_ModifyInviteLinkPasswordAction {
	if x != nil {
		return x.ModifyInviteLinkPassword
	}
	return nil
}

func (x *GroupChange_Actions) GetModifyDescription() *GroupChange_Actions_ModifyDescriptionAction {
	if x != nil {
		return x.ModifyDescription
	}
	return nil
}

func (x *GroupChange_Actions) GetModifyAnnouncementsOnly() *GroupChange_Actions_ModifyAnnouncementsOnlyAction {
	if x != nil {
		return x.ModifyAnnouncementsOnly
	}
	return nil
}

type GroupChange_Actions_AddMemberAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Added              *Member `protobuf:"bytes,1,opt,name=added,proto3" json:"added,omitempty"`
	JoinFromInviteLink bool    `protobuf:"varint,2,opt,name=joinFromInviteLink,proto3" json:"joinFromInviteLink,omitempty"`
}

func (x *GroupChange_Actions_AddMemberAction) Reset() {
	*x = GroupChange_Actions_AddMemberAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChange_Actions_AddMemberAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChange_Actions_AddMemberAction) ProtoMessage() {}

func (x *GroupChange_Actions_AddMemberAction) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChange_Actions_AddMemberAction.ProtoReflect.Descriptor instead.
func (*GroupChange_Actions_AddMemberAction) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{7, 0, 0}
}

func (x *GroupChange_Actions_AddMemberAction) GetAdded() *Member {
	if x != nil {
		return x.Added
	}
	return nil
}

func (x *GroupChange_Actions_AddMemberAction) GetJoinFromInviteLink() bool {
	if x != nil {
		return x.JoinFromInviteLink
	}
	return false
}

type GroupChange_Actions_DeleteMemberAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletedUserId []byte `protobuf:"bytes,1,opt,name=deletedUserId,proto3" json:"deletedUserId,omitempty"`
}

func (x *GroupChange_Actions_DeleteMemberAction) Reset() {
	*x = GroupChange_Actions_DeleteMemberAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChange_Actions_DeleteMemberAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChange_Actions_DeleteMemberAction) ProtoMessage() {}

func (x *GroupChange_Actions_DeleteMemberAction) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChange_Actions_DeleteMemberAction.ProtoReflect.Descriptor instead.
func (*GroupChange_Actions_DeleteMemberAction) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{7, 0, 1}
}

func (x *GroupChange_Actions_DeleteMemberAction) GetDeletedUserId() []byte {
	if x != nil {
		return x.DeletedUserId
	}
	return nil
}

type GroupChange_Actions_ModifyMemberRoleAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId []byte      `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Role   Member_Role `protobuf:"varint,2,opt,name=role,proto3,enum=textsecure.Member_Role" json:"role,omitempty"`
}

func (x *GroupChange_Actions_ModifyMemberRoleAction) Reset() {
	*x = GroupChange_Actions_ModifyMemberRoleAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChange_Actions_ModifyMemberRoleAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChange_Actions_ModifyMemberRoleAction) ProtoMessage() {}

func (x *GroupChange_Actions_ModifyMemberRoleAction) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChange_Actions_ModifyMemberRoleAction.ProtoReflect.Descriptor instead.
func (*GroupChange_Actions_ModifyMemberRoleAction) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{7, 0, 2}
}

func (x *GroupChange_Actions_ModifyMemberRoleAction) GetUserId() []byte {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *GroupChange_Actions_ModifyMemberRoleAction) GetRole() Member_Role {
	if x != nil {
		return x.Role
	}
	return Member_UNKNOWN
}

type GroupChange_Actions_ModifyMemberProfileKeyAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Presentation []byte `protobuf:"bytes,1,opt,name=presentation,proto3" json:"presentation,omitempty"`
}

func (x *GroupChange_Actions_ModifyMemberProfileKeyAction) Reset() {
	*x = GroupChange_Actions_ModifyMemberProfileKeyAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChange_Actions_ModifyMemberProfileKeyAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChange_Actions_ModifyMemberProfileKeyAction) ProtoMessage() {}

func (x *GroupChange_Actions_ModifyMemberProfileKeyAction) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChange_Actions_ModifyMemberProfileKeyAction.ProtoReflect.Descriptor instead.
func (*GroupChange_Actions_ModifyMemberProfileKeyAction) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{7, 0, 3}
}

func (x *GroupChange_Actions_ModifyMemberProfileKeyAction) GetPresentation() []byte {
	if x != nil {
		return x.Presentation
	}
	return nil
}

type GroupChange_Actions_AddMemberPendingProfileKeyAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Added *MemberPendingProfileKey `protobuf:"bytes,1,opt,name=added,proto3" json:"added,omitempty"`
}

func (x *GroupChange_Actions_AddMemberPendingProfileKeyAction) Reset() {
	*x = GroupChange_Actions_AddMemberPendingProfileKeyAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChange_Actions_AddMemberPendingProfileKeyAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChange_Actions_AddMemberPendingProfileKeyAction) ProtoMessage() {}

func (x *GroupChange_Actions_AddMemberPendingProfileKeyAction) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChange_Actions_AddMemberPendingProfileKeyAction.ProtoReflect.Descriptor instead.
func (*GroupChange_Actions_AddMemberPendingProfileKeyAction) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{7, 0, 4}
}

func (x *GroupChange_Actions_AddMemberPendingProfileKeyAction) GetAdded() *MemberPendingProfileKey {
	if x != nil {
		return x.Added
	}
	return nil
}

type GroupChange_Actions_DeleteMemberPendingProfileKeyAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletedUserId []byte `protobuf:"bytes,1,opt,name=deletedUserId,proto3" json:"deletedUserId,omitempty"`
}

func (x *GroupChange_Actions_DeleteMemberPendingProfileKeyAction) Reset() {
	*x = GroupChange_Actions_DeleteMemberPendingProfileKeyAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChange_Actions_DeleteMemberPendingProfileKeyAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChange_Actions_DeleteMemberPendingProfileKeyAction) ProtoMessage() {}

func (x *GroupChange_Actions_DeleteMemberPendingProfileKeyAction) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChange_Actions_DeleteMemberPendingProfileKeyAction.ProtoReflect.Descriptor instead.
func (*GroupChange_Actions_DeleteMemberPendingProfileKeyAction) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{7, 0, 5}
}

func (x *GroupChange_Actions_DeleteMemberPendingProfileKeyAction) GetDeletedUserId() []byte {
	if x != nil {
		return x.DeletedUserId
	}
	return nil
}

type GroupChange_Actions_PromoteMemberPendingProfileKeyAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Presentation []byte `protobuf:"bytes,1,opt,name=presentation,proto3" json:"presentation,omitempty"`
}

func (x *GroupChange_Actions_PromoteMemberPendingProfileKeyAction) Reset() {
	*x = GroupChange_Actions_PromoteMemberPendingProfileKeyAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChange_Actions_PromoteMemberPendingProfileKeyAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChange_Actions_PromoteMemberPendingProfileKeyAction) ProtoMessage() {}

func (x *GroupChange_Actions_PromoteMemberPendingProfileKeyAction) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChange_Actions_PromoteMemberPendingProfileKeyAction.ProtoReflect.Descriptor instead.
func (*GroupChange_Actions_PromoteMemberPendingProfileKeyAction) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{7, 0, 6}
}

func (x *GroupChange_Actions_PromoteMemberPendingProfileKeyAction) GetPresentation() []byte {
	if x != nil {
		return x.Presentation
	}
	return nil
}

type GroupChange_Actions_AddMemberPendingAdminApprovalAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Added *MemberPendingAdminApproval `protobuf:"bytes,1,opt,name=added,proto3" json:"added,omitempty"`
}

func (x *GroupChange_Actions_AddMemberPendingAdminApprovalAction) Reset() {
	*x = GroupChange_Actions_AddMemberPendingAdminApprovalAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChange_Actions_AddMemberPendingAdminApprovalAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChange_Actions_AddMemberPendingAdminApprovalAction) ProtoMessage() {}

func (x *GroupChange_Actions_AddMemberPendingAdminApprovalAction) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChange_Actions_AddMemberPendingAdminApprovalAction.ProtoReflect.Descriptor instead.
func (*GroupChange_Actions_AddMemberPendingAdminApprovalAction) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{7, 0, 7}
}

func (x *GroupChange_Actions_AddMemberPendingAdminApprovalAction) GetAdded() *MemberPendingAdminApproval {
	if x != nil {
		return x.Added
	}
	return nil
}

type GroupChange_Actions_DeleteMemberPendingAdminApprovalAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletedUserId []byte `protobuf:"bytes,1,opt,name=deletedUserId,proto3" json:"deletedUserId,omitempty"`
}

func (x *GroupChange_Actions_DeleteMemberPendingAdminApprovalAction) Reset() {
	*x = GroupChange_Actions_DeleteMemberPendingAdminApprovalAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChange_Actions_DeleteMemberPendingAdminApprovalAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChange_Actions_DeleteMemberPendingAdminApprovalAction) ProtoMessage() {}

func (x *GroupChange_Actions_DeleteMemberPendingAdminApprovalAction) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChange_Actions_DeleteMemberPendingAdminApprovalAction.ProtoReflect.Descriptor instead.
func (*GroupChange_Actions_DeleteMemberPendingAdminApprovalAction) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{7, 0, 8}
}

func (x *GroupChange_Actions_DeleteMemberPendingAdminApprovalAction) GetDeletedUserId() []byte {
	if x != nil {
		return x.DeletedUserId
	}
	return nil
}

type GroupChange_Actions_PromoteMemberPendingAdminApprovalAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId []byte      `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Role   Member_Role `protobuf:"varint,2,opt,name=role,proto3,enum=textsecure.Member_Role" json:"role,omitempty"`
}

func (x *GroupChange_Actions_PromoteMemberPendingAdminApprovalAction) Reset() {
	*x = GroupChange_Actions_PromoteMemberPendingAdminApprovalAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChange_Actions_PromoteMemberPendingAdminApprovalAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChange_Actions_PromoteMemberPendingAdminApprovalAction) ProtoMessage() {}

func (x *GroupChange_Actions_PromoteMemberPendingAdminApprovalAction) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChange_Actions_PromoteMemberPendingAdminApprovalAction.ProtoReflect.Descriptor instead.
func (*GroupChange_Actions_PromoteMemberPendingAdminApprovalAction) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{7, 0, 9}
}

func (x *GroupChange_Actions_PromoteMemberPendingAdminApprovalAction) GetUserId() []byte {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *GroupChange_Actions_PromoteMemberPendingAdminApprovalAction) GetRole() Member_Role {
	if x != nil {
		return x.Role
	}
	return Member_UNKNOWN
}

type GroupChange_Actions_ModifyTitleAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title []byte `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *GroupChange_Actions_ModifyTitleAction) Reset() {
	*x = GroupChange_Actions_ModifyTitleAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChange_Actions_ModifyTitleAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChange_Actions_ModifyTitleAction) ProtoMessage() {}

func (x *GroupChange_Actions_ModifyTitleAction) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChange_Actions_ModifyTitleAction.ProtoReflect.Descriptor instead.
func (*GroupChange_Actions_ModifyTitleAction) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{7, 0, 10}
}

func (x *GroupChange_Actions_ModifyTitleAction) GetTitle() []byte {
	if x != nil {
		return x.Title
	}
	return nil
}

type GroupChange_Actions_ModifyDescriptionAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description []byte `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *GroupChange_Actions_ModifyDescriptionAction) Reset() {
	*x = GroupChange_Actions_ModifyDescriptionAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChange_Actions_ModifyDescriptionAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChange_Actions_ModifyDescriptionAction) ProtoMessage() {}

func (x *GroupChange_Actions_ModifyDescriptionAction) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChange_Actions_ModifyDescriptionAction.ProtoReflect.Descriptor instead.
func (*GroupChange_Actions_ModifyDescriptionAction) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{7, 0, 11}
}

func (x *GroupChange_Actions_ModifyDescriptionAction) GetDescription() []byte {
	if x != nil {
		return x.Description
	}
	return nil
}

type GroupChange_Actions_ModifyAvatarAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar string `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *GroupChange_Actions_ModifyAvatarAction) Reset() {
	*x = GroupChange_Actions_ModifyAvatarAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChange_Actions_ModifyAvatarAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChange_Actions_ModifyAvatarAction) ProtoMessage() {}

func (x *GroupChange_Actions_ModifyAvatarAction) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChange_Actions_ModifyAvatarAction.ProtoReflect.Descriptor instead.
func (*GroupChange_Actions_ModifyAvatarAction) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{7, 0, 12}
}

func (x *GroupChange_Actions_ModifyAvatarAction) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type GroupChange_Actions_ModifyDisappearingMessageTimerAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timer []byte `protobuf:"bytes,1,opt,name=timer,proto3" json:"timer,omitempty"`
}

func (x *GroupChange_Actions_ModifyDisappearingMessageTimerAction) Reset() {
	*x = GroupChange_Actions_ModifyDisappearingMessageTimerAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChange_Actions_ModifyDisappearingMessageTimerAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChange_Actions_ModifyDisappearingMessageTimerAction) ProtoMessage() {}

func (x *GroupChange_Actions_ModifyDisappearingMessageTimerAction) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChange_Actions_ModifyDisappearingMessageTimerAction.ProtoReflect.Descriptor instead.
func (*GroupChange_Actions_ModifyDisappearingMessageTimerAction) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{7, 0, 13}
}

func (x *GroupChange_Actions_ModifyDisappearingMessageTimerAction) GetTimer() []byte {
	if x != nil {
		return x.Timer
	}
	return nil
}

type GroupChange_Actions_ModifyAttributesAccessControlAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttributesAccess AccessControl_AccessRequired `protobuf:"varint,1,opt,name=attributesAccess,proto3,enum=textsecure.AccessControl_AccessRequired" json:"attributesAccess,omitempty"`
}

func (x *GroupChange_Actions_ModifyAttributesAccessControlAction) Reset() {
	*x = GroupChange_Actions_ModifyAttributesAccessControlAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChange_Actions_ModifyAttributesAccessControlAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChange_Actions_ModifyAttributesAccessControlAction) ProtoMessage() {}

func (x *GroupChange_Actions_ModifyAttributesAccessControlAction) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChange_Actions_ModifyAttributesAccessControlAction.ProtoReflect.Descriptor instead.
func (*GroupChange_Actions_ModifyAttributesAccessControlAction) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{7, 0, 14}
}

func (x *GroupChange_Actions_ModifyAttributesAccessControlAction) GetAttributesAccess() AccessControl_AccessRequired {
	if x != nil {
		return x.AttributesAccess
	}
	return AccessControl_UNKNOWN
}

type GroupChange_Actions_ModifyMembersAccessControlAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MembersAccess AccessControl_AccessRequired `protobuf:"varint,1,opt,name=membersAccess,proto3,enum=textsecure.AccessControl_AccessRequired" json:"membersAccess,omitempty"`
}

func (x *GroupChange_Actions_ModifyMembersAccessControlAction) Reset() {
	*x = GroupChange_Actions_ModifyMembersAccessControlAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChange_Actions_ModifyMembersAccessControlAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChange_Actions_ModifyMembersAccessControlAction) ProtoMessage() {}

func (x *GroupChange_Actions_ModifyMembersAccessControlAction) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChange_Actions_ModifyMembersAccessControlAction.ProtoReflect.Descriptor instead.
func (*GroupChange_Actions_ModifyMembersAccessControlAction) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{7, 0, 15}
}

func (x *GroupChange_Actions_ModifyMembersAccessControlAction) GetMembersAccess() AccessControl_AccessRequired {
	if x != nil {
		return x.MembersAccess
	}
	return AccessControl_UNKNOWN
}

type GroupChange_Actions_ModifyAddFromInviteLinkAccessControlAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddFromInviteLinkAccess AccessControl_AccessRequired `protobuf:"varint,1,opt,name=addFromInviteLinkAccess,proto3,enum=textsecure.AccessControl_AccessRequired" json:"addFromInviteLinkAccess,omitempty"`
}

func (x *GroupChange_Actions_ModifyAddFromInviteLinkAccessControlAction) Reset() {
	*x = GroupChange_Actions_ModifyAddFromInviteLinkAccessControlAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChange_Actions_ModifyAddFromInviteLinkAccessControlAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChange_Actions_ModifyAddFromInviteLinkAccessControlAction) ProtoMessage() {}

func (x *GroupChange_Actions_ModifyAddFromInviteLinkAccessControlAction) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChange_Actions_ModifyAddFromInviteLinkAccessControlAction.ProtoReflect.Descriptor instead.
func (*GroupChange_Actions_ModifyAddFromInviteLinkAccessControlAction) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{7, 0, 16}
}

func (x *GroupChange_Actions_ModifyAddFromInviteLinkAccessControlAction) GetAddFromInviteLinkAccess() AccessControl_AccessRequired {
	if x != nil {
		return x.AddFromInviteLinkAccess
	}
	return AccessControl_UNKNOWN
}

type GroupChange_Actions_ModifyInviteLinkPasswordAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteLinkPassword []byte `protobuf:"bytes,1,opt,name=inviteLinkPassword,proto3" json:"inviteLinkPassword,omitempty"`
}

func (x *GroupChange_Actions_ModifyInviteLinkPasswordAction) Reset() {
	*x = GroupChange_Actions_ModifyInviteLinkPasswordAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChange_Actions_ModifyInviteLinkPasswordAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChange_Actions_ModifyInviteLinkPasswordAction) ProtoMessage() {}

func (x *GroupChange_Actions_ModifyInviteLinkPasswordAction) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChange_Actions_ModifyInviteLinkPasswordAction.ProtoReflect.Descriptor instead.
func (*GroupChange_Actions_ModifyInviteLinkPasswordAction) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{7, 0, 17}
}

func (x *GroupChange_Actions_ModifyInviteLinkPasswordAction) GetInviteLinkPassword() []byte {
	if x != nil {
		return x.InviteLinkPassword
	}
	return nil
}

type GroupChange_Actions_ModifyAnnouncementsOnlyAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnnouncementsOnly bool `protobuf:"varint,1,opt,name=announcements_only,json=announcementsOnly,proto3" json:"announcements_only,omitempty"`
}

func (x *GroupChange_Actions_ModifyAnnouncementsOnlyAction) Reset() {
	*x = GroupChange_Actions_ModifyAnnouncementsOnlyAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChange_Actions_ModifyAnnouncementsOnlyAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChange_Actions_ModifyAnnouncementsOnlyAction) ProtoMessage() {}

func (x *GroupChange_Actions_ModifyAnnouncementsOnlyAction) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChange_Actions_ModifyAnnouncementsOnlyAction.ProtoReflect.Descriptor instead.
func (*GroupChange_Actions_ModifyAnnouncementsOnlyAction) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{7, 0, 18}
}

func (x *GroupChange_Actions_ModifyAnnouncementsOnlyAction) GetAnnouncementsOnly() bool {
	if x != nil {
		return x.AnnouncementsOnly
	}
	return false
}

type GroupChanges_GroupChangeState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupChange *GroupChange `protobuf:"bytes,1,opt,name=groupChange,proto3" json:"groupChange,omitempty"`
	GroupState  *Group       `protobuf:"bytes,2,opt,name=groupState,proto3" json:"groupState,omitempty"`
}

func (x *GroupChanges_GroupChangeState) Reset() {
	*x = GroupChanges_GroupChangeState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Groups_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChanges_GroupChangeState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChanges_GroupChangeState) ProtoMessage() {}

func (x *GroupChanges_GroupChangeState) ProtoReflect() protoreflect.Message {
	mi := &file_Groups_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChanges_GroupChangeState.ProtoReflect.Descriptor instead.
func (*GroupChanges_GroupChangeState) Descriptor() ([]byte, []int) {
	return file_Groups_proto_rawDescGZIP(), []int{8, 0}
}

func (x *GroupChanges_GroupChangeState) GetGroupChange() *GroupChange {
	if x != nil {
		return x.GroupChange
	}
	return nil
}

func (x *GroupChanges_GroupChangeState) GetGroupState() *Group {
	if x != nil {
		return x.GroupState
	}
	return nil
}

var File_Groups_proto protoreflect.FileDescriptor

var file_Groups_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a,
	0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x22, 0xc4, 0x01, 0x0a, 0x16, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x63, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x67,
	0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x22, 0xf0, 0x01, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x33, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x49, 0x53, 0x54, 0x52, 0x41, 0x54,
	0x4f, 0x52, 0x10, 0x02, 0x22, 0x89, 0x01, 0x0a, 0x17, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x2a, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d,
	0x61, 0x64, 0x64, 0x65, 0x64, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x65, 0x64, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x22, 0x96, 0x01, 0x0a, 0x1a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xcf, 0x02, 0x0a, 0x0d, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x48, 0x0a, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x28, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x56, 0x0a, 0x11, 0x61, 0x64, 0x64,
	0x46, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x65, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x11,
	0x61, 0x64, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x22, 0x58, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x59, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x4d,
	0x42, 0x45, 0x52, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x49, 0x53,
	0x54, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x53, 0x41,
	0x54, 0x49, 0x53, 0x46, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x04, 0x22, 0xe6, 0x04, 0x0a, 0x05,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x3c, 0x0a, 0x19, 0x64, 0x69, 0x73, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x19, 0x64, 0x69, 0x73, 0x61, 0x70, 0x70, 0x65, 0x61,
	0x72, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65,
	0x72, 0x12, 0x3f, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x07,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x5f, 0x0a, 0x18, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74,
	0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65,
	0x79, 0x52, 0x18, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x68, 0x0a, 0x1b, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x1b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c,
	0x69, 0x6e, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x12, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x4f, 0x6e, 0x6c, 0x79, 0x22, 0xc5, 0x02, 0x0a, 0x0d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f,
	0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x56, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x46, 0x72, 0x6f,
	0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x28, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x11, 0x61, 0x64, 0x64,
	0x46, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x22, 0xa4, 0x20, 0x0a,
	0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x70, 0x6f,
	0x63, 0x68, 0x1a, 0xae, 0x1f, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4f, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x74,
	0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x64,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x61,
	0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x58, 0x0a, 0x0d, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x12, 0x64, 0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x76, 0x0a, 0x17, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x4b, 0x65, 0x79, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x74, 0x65, 0x78,
	0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b,
	0x65, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x17, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79,
	0x73, 0x12, 0x82, 0x01, 0x0a, 0x1b, 0x61, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65,
	0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x4b, 0x65, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1b, 0x61, 0x64, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x8b, 0x01, 0x0a, 0x1e, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x43, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x8e, 0x01, 0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44,
	0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x53, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x74, 0x65, 0x78,
	0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x56, 0x0a, 0x0c, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x8c, 0x01, 0x0a, 0x1e, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x44, 0x69, 0x73,
	0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x74, 0x65,
	0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x44, 0x69, 0x73, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x1e, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x44, 0x69, 0x73, 0x61, 0x70, 0x70, 0x65,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x72, 0x12, 0x7b, 0x0a, 0x16, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x43, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x16, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x70,
	0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x74, 0x65, 0x78,
	0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x90, 0x01, 0x0a, 0x1d, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x64, 0x64, 0x46, 0x72,
	0x6f, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x41, 0x64, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1d, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x64, 0x64, 0x46,
	0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x8b, 0x01, 0x0a, 0x1e, 0x61, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x74,
	0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x64,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x1e, 0x61, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x50, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61,
	0x6c, 0x12, 0x94, 0x01, 0x0a, 0x21, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e,
	0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x21, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x12, 0x97, 0x01, 0x0a, 0x22, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18,
	0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x22,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x61, 0x6c, 0x12, 0x7a, 0x0a, 0x18, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x18, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x65,
	0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x74, 0x65, 0x78, 0x74,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x79, 0x0a, 0x19, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f,
	0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x6e, 0x6c,
	0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x17, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x6e, 0x6c, 0x79,
	0x1a, 0x6b, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x12, 0x2e, 0x0a,
	0x12, 0x6a, 0x6f, 0x69, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c,
	0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6a, 0x6f, 0x69, 0x6e, 0x46,
	0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x1a, 0x3a, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x5d, 0x0a, 0x16, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x78, 0x74,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x1a, 0x42, 0x0a, 0x1c, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b,
	0x65, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x5d, 0x0a, 0x20,
	0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x39, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x4b, 0x65, 0x79, 0x52, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x1a, 0x4b, 0x0a, 0x23, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x4a, 0x0a, 0x24, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x63, 0x0a, 0x23, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x05, 0x61,
	0x64, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x65, 0x78,
	0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x61, 0x6c, 0x52, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x1a, 0x4e, 0x0a, 0x26, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x6e, 0x0a, 0x27, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x78,
	0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x1a, 0x29, 0x0a, 0x11, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x1a, 0x3b, 0x0a, 0x17, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x2c, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x1a,
	0x3c, 0x0a, 0x24, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x44, 0x69, 0x73, 0x61, 0x70, 0x70, 0x65,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x1a, 0x7b, 0x0a,
	0x23, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x10, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28,
	0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x10, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0x72, 0x0a, 0x20, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e,
	0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52,
	0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0x90,
	0x01, 0x0a, 0x2a, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x64, 0x64, 0x46, 0x72, 0x6f, 0x6d,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x62, 0x0a,
	0x17, 0x61, 0x64, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28,
	0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x17, 0x61, 0x64, 0x64, 0x46, 0x72, 0x6f,
	0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x1a, 0x50, 0x0a, 0x1e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x12, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x1a, 0x4e, 0x0a, 0x1d, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f,
	0x6e, 0x6c, 0x79, 0x22, 0xe0, 0x01, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x65, 0x78,
	0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x1a, 0x80, 0x01, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x74, 0x65, 0x78, 0x74, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x2f, 0x0a, 0x17, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x40, 0x0a, 0x2f, 0x6f, 0x72, 0x67, 0x2e, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x42, 0x0b, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x50, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_Groups_proto_rawDescOnce sync.Once
	file_Groups_proto_rawDescData = file_Groups_proto_rawDesc
)

func file_Groups_proto_rawDescGZIP() []byte {
	file_Groups_proto_rawDescOnce.Do(func() {
		file_Groups_proto_rawDescData = protoimpl.X.CompressGZIP(file_Groups_proto_rawDescData)
	})
	return file_Groups_proto_rawDescData
}

var file_Groups_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_Groups_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_Groups_proto_goTypes = []interface{}{
	(Member_Role)(0),                                                       // 0: textsecure.Member.Role
	(AccessControl_AccessRequired)(0),                                      // 1: textsecure.AccessControl.AccessRequired
	(*AvatarUploadAttributes)(nil),                                         // 2: textsecure.AvatarUploadAttributes
	(*Member)(nil),                                                         // 3: textsecure.Member
	(*MemberPendingProfileKey)(nil),                                        // 4: textsecure.MemberPendingProfileKey
	(*MemberPendingAdminApproval)(nil),                                     // 5: textsecure.MemberPendingAdminApproval
	(*AccessControl)(nil),                                                  // 6: textsecure.AccessControl
	(*Group)(nil),                                                          // 7: textsecure.Group
	(*GroupJoinInfo)(nil),                                                  // 8: textsecure.GroupJoinInfo
	(*GroupChange)(nil),                                                    // 9: textsecure.GroupChange
	(*GroupChanges)(nil),                                                   // 10: textsecure.GroupChanges
	(*ExternalGroupCredential)(nil),                                        // 11: textsecure.ExternalGroupCredential
	(*GroupChange_Actions)(nil),                                            // 12: textsecure.GroupChange.Actions
	(*GroupChange_Actions_AddMemberAction)(nil),                            // 13: textsecure.GroupChange.Actions.AddMemberAction
	(*GroupChange_Actions_DeleteMemberAction)(nil),                         // 14: textsecure.GroupChange.Actions.DeleteMemberAction
	(*GroupChange_Actions_ModifyMemberRoleAction)(nil),                     // 15: textsecure.GroupChange.Actions.ModifyMemberRoleAction
	(*GroupChange_Actions_ModifyMemberProfileKeyAction)(nil),               // 16: textsecure.GroupChange.Actions.ModifyMemberProfileKeyAction
	(*GroupChange_Actions_AddMemberPendingProfileKeyAction)(nil),           // 17: textsecure.GroupChange.Actions.AddMemberPendingProfileKeyAction
	(*GroupChange_Actions_DeleteMemberPendingProfileKeyAction)(nil),        // 18: textsecure.GroupChange.Actions.DeleteMemberPendingProfileKeyAction
	(*GroupChange_Actions_PromoteMemberPendingProfileKeyAction)(nil),       // 19: textsecure.GroupChange.Actions.PromoteMemberPendingProfileKeyAction
	(*GroupChange_Actions_AddMemberPendingAdminApprovalAction)(nil),        // 20: textsecure.GroupChange.Actions.AddMemberPendingAdminApprovalAction
	(*GroupChange_Actions_DeleteMemberPendingAdminApprovalAction)(nil),     // 21: textsecure.GroupChange.Actions.DeleteMemberPendingAdminApprovalAction
	(*GroupChange_Actions_PromoteMemberPendingAdminApprovalAction)(nil),    // 22: textsecure.GroupChange.Actions.PromoteMemberPendingAdminApprovalAction
	(*GroupChange_Actions_ModifyTitleAction)(nil),                          // 23: textsecure.GroupChange.Actions.ModifyTitleAction
	(*GroupChange_Actions_ModifyDescriptionAction)(nil),                    // 24: textsecure.GroupChange.Actions.ModifyDescriptionAction
	(*GroupChange_Actions_ModifyAvatarAction)(nil),                         // 25: textsecure.GroupChange.Actions.ModifyAvatarAction
	(*GroupChange_Actions_ModifyDisappearingMessageTimerAction)(nil),       // 26: textsecure.GroupChange.Actions.ModifyDisappearingMessageTimerAction
	(*GroupChange_Actions_ModifyAttributesAccessControlAction)(nil),        // 27: textsecure.GroupChange.Actions.ModifyAttributesAccessControlAction
	(*GroupChange_Actions_ModifyMembersAccessControlAction)(nil),           // 28: textsecure.GroupChange.Actions.ModifyMembersAccessControlAction
	(*GroupChange_Actions_ModifyAddFromInviteLinkAccessControlAction)(nil), // 29: textsecure.GroupChange.Actions.ModifyAddFromInviteLinkAccessControlAction
	(*GroupChange_Actions_ModifyInviteLinkPasswordAction)(nil),             // 30: textsecure.GroupChange.Actions.ModifyInviteLinkPasswordAction
	(*GroupChange_Actions_ModifyAnnouncementsOnlyAction)(nil),              // 31: textsecure.GroupChange.Actions.ModifyAnnouncementsOnlyAction
	(*GroupChanges_GroupChangeState)(nil),                                  // 32: textsecure.GroupChanges.GroupChangeState
}
var file_Groups_proto_depIdxs = []int32{
	0,  // 0: textsecure.Member.role:type_name -> textsecure.Member.Role
	3,  // 1: textsecure.MemberPendingProfileKey.member:type_name -> textsecure.Member
	1,  // 2: textsecure.AccessControl.attributes:type_name -> textsecure.AccessControl.AccessRequired
	1,  // 3: textsecure.AccessControl.members:type_name -> textsecure.AccessControl.AccessRequired
	1,  // 4: textsecure.AccessControl.addFromInviteLink:type_name -> textsecure.AccessControl.AccessRequired
	6,  // 5: textsecure.Group.accessControl:type_name -> textsecure.AccessControl
	3,  // 6: textsecure.Group.members:type_name -> textsecure.Member
	4,  // 7: textsecure.Group.membersPendingProfileKey:type_name -> textsecure.MemberPendingProfileKey
	5,  // 8: textsecure.Group.membersPendingAdminApproval:type_name -> textsecure.MemberPendingAdminApproval
	1,  // 9: textsecure.GroupJoinInfo.addFromInviteLink:type_name -> textsecure.AccessControl.AccessRequired
	32, // 10: textsecure.GroupChanges.groupChanges:type_name -> textsecure.GroupChanges.GroupChangeState
	13, // 11: textsecure.GroupChange.Actions.addMembers:type_name -> textsecure.GroupChange.Actions.AddMemberAction
	14, // 12: textsecure.GroupChange.Actions.deleteMembers:type_name -> textsecure.GroupChange.Actions.DeleteMemberAction
	15, // 13: textsecure.GroupChange.Actions.modifyMemberRoles:type_name -> textsecure.GroupChange.Actions.ModifyMemberRoleAction
	16, // 14: textsecure.GroupChange.Actions.modifyMemberProfileKeys:type_name -> textsecure.GroupChange.Actions.ModifyMemberProfileKeyAction
	17, // 15: textsecure.GroupChange.Actions.addMembersPendingProfileKey:type_name -> textsecure.GroupChange.Actions.AddMemberPendingProfileKeyAction
	18, // 16: textsecure.GroupChange.Actions.deleteMembersPendingProfileKey:type_name -> textsecure.GroupChange.Actions.DeleteMemberPendingProfileKeyAction
	19, // 17: textsecure.GroupChange.Actions.promoteMembersPendingProfileKey:type_name -> textsecure.GroupChange.Actions.PromoteMemberPendingProfileKeyAction
	23, // 18: textsecure.GroupChange.Actions.modifyTitle:type_name -> textsecure.GroupChange.Actions.ModifyTitleAction
	25, // 19: textsecure.GroupChange.Actions.modifyAvatar:type_name -> textsecure.GroupChange.Actions.ModifyAvatarAction
	26, // 20: textsecure.GroupChange.Actions.modifyDisappearingMessageTimer:type_name -> textsecure.GroupChange.Actions.ModifyDisappearingMessageTimerAction
	27, // 21: textsecure.GroupChange.Actions.modifyAttributesAccess:type_name -> textsecure.GroupChange.Actions.ModifyAttributesAccessControlAction
	28, // 22: textsecure.GroupChange.Actions.modifyMemberAccess:type_name -> textsecure.GroupChange.Actions.ModifyMembersAccessControlAction
	29, // 23: textsecure.GroupChange.Actions.modifyAddFromInviteLinkAccess:type_name -> textsecure.GroupChange.Actions.ModifyAddFromInviteLinkAccessControlAction
	20, // 24: textsecure.GroupChange.Actions.addMembersPendingAdminApproval:type_name -> textsecure.GroupChange.Actions.AddMemberPendingAdminApprovalAction
	21, // 25: textsecure.GroupChange.Actions.deleteMembersPendingAdminApproval:type_name -> textsecure.GroupChange.Actions.DeleteMemberPendingAdminApprovalAction
	22, // 26: textsecure.GroupChange.Actions.promoteMembersPendingAdminApproval:type_name -> textsecure.GroupChange.Actions.PromoteMemberPendingAdminApprovalAction
	30, // 27: textsecure.GroupChange.Actions.modifyInviteLinkPassword:type_name -> textsecure.GroupChange.Actions.ModifyInviteLinkPasswordAction
	24, // 28: textsecure.GroupChange.Actions.modifyDescription:type_name -> textsecure.GroupChange.Actions.ModifyDescriptionAction
	31, // 29: textsecure.GroupChange.Actions.modify_announcements_only:type_name -> textsecure.GroupChange.Actions.ModifyAnnouncementsOnlyAction
	3,  // 30: textsecure.GroupChange.Actions.AddMemberAction.added:type_name -> textsecure.Member
	0,  // 31: textsecure.GroupChange.Actions.ModifyMemberRoleAction.role:type_name -> textsecure.Member.Role
	4,  // 32: textsecure.GroupChange.Actions.AddMemberPendingProfileKeyAction.added:type_name -> textsecure.MemberPendingProfileKey
	5,  // 33: textsecure.GroupChange.Actions.AddMemberPendingAdminApprovalAction.added:type_name -> textsecure.MemberPendingAdminApproval
	0,  // 34: textsecure.GroupChange.Actions.PromoteMemberPendingAdminApprovalAction.role:type_name -> textsecure.Member.Role
	1,  // 35: textsecure.GroupChange.Actions.ModifyAttributesAccessControlAction.attributesAccess:type_name -> textsecure.AccessControl.AccessRequired
	1,  // 36: textsecure.GroupChange.Actions.ModifyMembersAccessControlAction.membersAccess:type_name -> textsecure.AccessControl.AccessRequired
	1,  // 37: textsecure.GroupChange.Actions.ModifyAddFromInviteLinkAccessControlAction.addFromInviteLinkAccess:type_name -> textsecure.AccessControl.AccessRequired
	9,  // 38: textsecure.GroupChanges.GroupChangeState.groupChange:type_name -> textsecure.GroupChange
	7,  // 39: textsecure.GroupChanges.GroupChangeState.groupState:type_name -> textsecure.Group
	40, // [40:40] is the sub-list for method output_type
	40, // [40:40] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_Groups_proto_init() }
func file_Groups_proto_init() {
	if File_Groups_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Groups_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarUploadAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Member); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberPendingProfileKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberPendingAdminApproval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupJoinInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChanges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalGroupCredential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChange_Actions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChange_Actions_AddMemberAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChange_Actions_DeleteMemberAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChange_Actions_ModifyMemberRoleAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChange_Actions_ModifyMemberProfileKeyAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChange_Actions_AddMemberPendingProfileKeyAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChange_Actions_DeleteMemberPendingProfileKeyAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChange_Actions_PromoteMemberPendingProfileKeyAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChange_Actions_AddMemberPendingAdminApprovalAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChange_Actions_DeleteMemberPendingAdminApprovalAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChange_Actions_PromoteMemberPendingAdminApprovalAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChange_Actions_ModifyTitleAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChange_Actions_ModifyDescriptionAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChange_Actions_ModifyAvatarAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChange_Actions_ModifyDisappearingMessageTimerAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChange_Actions_ModifyAttributesAccessControlAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChange_Actions_ModifyMembersAccessControlAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChange_Actions_ModifyAddFromInviteLinkAccessControlAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChange_Actions_ModifyInviteLinkPasswordAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChange_Actions_ModifyAnnouncementsOnlyAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Groups_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChanges_GroupChangeState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Groups_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Groups_proto_goTypes,
		DependencyIndexes: file_Groups_proto_depIdxs,
		EnumInfos:         file_Groups_proto_enumTypes,
		MessageInfos:      file_Groups_proto_msgTypes,
	}.Build()
	File_Groups_proto = out.File
	file_Groups_proto_rawDesc = nil
	file_Groups_proto_goTypes = nil
	file_Groups_proto_depIdxs = nil
}
